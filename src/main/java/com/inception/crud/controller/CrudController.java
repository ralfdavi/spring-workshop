package com.inception.crud.controller;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.CrossOrigin;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.bind.annotation.RestController;

import com.inception.crud.entity.Customer;
import com.inception.crud.repository.CustomerRepository;

@RestController
@RequestMapping("/api")
@CrossOrigin(origins = "http://localhost:4200")
public class CrudController {
  

  @Autowired // This means to get the bean called customerRepository
  // Which is auto-generated by Spring, we will use it to handle the data
  private CustomerRepository customerRepository;

  @GetMapping(path="/customer")
  public @ResponseBody Iterable<Customer> getCustomers() {
    return customerRepository.findAll();
  }

  @GetMapping(path="/customer/{id}")
  public @ResponseBody Customer getCustomer(@PathVariable Long id) {
    return customerRepository.findById(id).get();
  }

  @PostMapping(path="/customer")
  public Customer createCustomer(@RequestBody Customer customer) {
      return customerRepository.save(customer);
  }

  @PutMapping(path="/customer")
  public Customer updateCustomer(@RequestBody Customer customer) {
      return customerRepository.save(customer);
  }

  @DeleteMapping(path="/customer/{id}")
  public @ResponseBody ResponseEntity<Long> deleteCustomer(@PathVariable Long id) {
      customerRepository.deleteById(id);
      return new ResponseEntity<Long>(id, HttpStatus.OK);
  }

}
